<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
          	<!-- 导入外部属性文件 -->
		 <context:property-placeholder location="classpath:jdbc.properties"/>
		 	<!-- 数据库连接池  -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="${jdbc.driver}"></property>
			<property name="url" value="${jdbc.url}"></property>
			<property name="username" value="${jdbc.user}"></property>
			<property name="password" value="${jdbc.password}"></property>
			 <!-- 连接池启动时的初始值 -->
			 <property name="initialSize" value="1"/>
			 <!-- 连接池的最大值 -->
			 <property name="maxActive" value="500"/>
			 <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
			 <property name="maxIdle" value="2"/>
			 <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
			 <property name="minIdle" value="1"/>
		</bean>
		<!-- action类 -->
		<bean name="goodsAction" class = "com.goodsswitch.action.GoodsAction">
			<property name="goodsService" ref="goodsService"></property>
		</bean>
		<bean name="ajaxAction" class="com.goodsswitch.action.GoodsAjaxAction">
				<property name="goodsService" ref="goodsService"></property>
				<property name="commentService" ref="commentService"></property>	
		</bean>
	
		<bean name="commentAction" class = "com.goodsswitch.action.CommentAction">
			<property name="commentService" ref="commentService"></property>
			<property name="goodsService" ref="goodsService"></property>
		</bean>
		<bean name="imgAction" class = "com.goodsswitch.action.GoodsFileUploadAction">
			<property name="imageService" ref="imageService"></property>
		</bean>
		<!-- service类 -->
		<bean name="goodsService" class="com.goodsswitch.goods.serviceimpl.GoodsServiceImpl">
			<property name="goodsDao" ref="goodsDao"/>
		</bean>
		<bean name="imageService" class="com.goodsswitch.goods.serviceimpl.ImageServiceImpl">
			<property name="imageDao" ref="imageDao"></property>
		</bean>
		<bean name="commentService" class="com.goodsswitch.goods.serviceimpl.CommentServiceImpl">
			<property name="commentDAO" ref="commentDAO"/>
		</bean>
		<!-- dao类 -->
		<bean name="goodsDao" class="com.goodsswitch.goods.model.daoimpl.GoodsDAOImpl">
			<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
		<bean name="imageDao" class="com.goodsswitch.goods.model.daoimpl.ImageDAOImpl">
			<property name="sessionFactory" ref="sessionFactory"/>
		</bean>

		<bean name="commentDAO" class="com.goodsswitch.goods.model.daoimpl.CommentDAOImpl">
			<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
	
	<!-- 整合hibernate 方式二 整合hibernate属性  -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate属性 -->
		<property name="hibernateProperties">
			<props>
			<!-- 数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- sql语句日志输出 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<!-- 自动建表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 事务默认操作 -->
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>  
			</props>
		</property>
		 <property name="mappingResources">
			    <list>
			      <value>com/goodsswitch/goods/model/pojo/Goods.hbm.xml</value>
			      <value>com/goodsswitch/goods/model/pojo/Comment.hbm.xml</value>
			       <value>com/goodsswitch/goods/model/pojo/Image.hbm.xml</value>
			     </list>
		     </property>
	</bean>
	<!-- 事务管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
		<!-- 注解的方式进行AOP的处理 -->
		<aop:aspectj-autoproxy/>
		<!-- 打开了注解方式使用事务的处理 -->
		<tx:annotation-driven transaction-manager="txManager"/>
		<!-- 注解的方式使用依赖注入 -->
		<context:annotation-config/>
		<!-- 使用扫描的方式来管理BEAN -->
	    <context:component-scan base-package="com"/>
</beans>
